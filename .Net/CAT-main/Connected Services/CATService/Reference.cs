//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CATService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TMAssignment", Namespace="http://schemas.datacontract.org/2004/07/cat.service")]
    public partial class TMAssignment : object
    {
        
        private int penaltyField;
        
        private int penaltyForOtherSpecialitiesField;
        
        private int specialityField;
        
        private string tmPathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int penalty
        {
            get
            {
                return this.penaltyField;
            }
            set
            {
                this.penaltyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int penaltyForOtherSpecialities
        {
            get
            {
                return this.penaltyForOtherSpecialitiesField;
            }
            set
            {
                this.penaltyForOtherSpecialitiesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int speciality
        {
            get
            {
                return this.specialityField;
            }
            set
            {
                this.specialityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tmPath
        {
            get
            {
                return this.tmPathField;
            }
            set
            {
                this.tmPathField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Statistics", Namespace="http://schemas.datacontract.org/2004/07/cat.service")]
    public partial class Statistics : object
    {
        
        private int match_100Field;
        
        private int match_101Field;
        
        private int match_50_74Field;
        
        private int match_75_84Field;
        
        private int match_85_94Field;
        
        private int match_95_99Field;
        
        private int no_matchField;
        
        private int repetitionsField;
        
        private string sourceLangField;
        
        private string targetLangField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int match_100
        {
            get
            {
                return this.match_100Field;
            }
            set
            {
                this.match_100Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int match_101
        {
            get
            {
                return this.match_101Field;
            }
            set
            {
                this.match_101Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int match_50_74
        {
            get
            {
                return this.match_50_74Field;
            }
            set
            {
                this.match_50_74Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int match_75_84
        {
            get
            {
                return this.match_75_84Field;
            }
            set
            {
                this.match_75_84Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int match_85_94
        {
            get
            {
                return this.match_85_94Field;
            }
            set
            {
                this.match_85_94Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int match_95_99
        {
            get
            {
                return this.match_95_99Field;
            }
            set
            {
                this.match_95_99Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int no_match
        {
            get
            {
                return this.no_matchField;
            }
            set
            {
                this.no_matchField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int repetitions
        {
            get
            {
                return this.repetitionsField;
            }
            set
            {
                this.repetitionsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sourceLang
        {
            get
            {
                return this.sourceLangField;
            }
            set
            {
                this.sourceLangField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string targetLang
        {
            get
            {
                return this.targetLangField;
            }
            set
            {
                this.targetLangField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TMInfo", Namespace="http://schemas.datacontract.org/2004/07/cat.service")]
    public partial class TMInfo : object
    {
        
        private int entryNumberField;
        
        private string guidField;
        
        private string langFromField;
        
        private string langToField;
        
        private System.DateTime lastAccessField;
        
        private string tmPathField;
        
        private CATService.TMType tmTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int entryNumber
        {
            get
            {
                return this.entryNumberField;
            }
            set
            {
                this.entryNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string guid
        {
            get
            {
                return this.guidField;
            }
            set
            {
                this.guidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string langFrom
        {
            get
            {
                return this.langFromField;
            }
            set
            {
                this.langFromField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string langTo
        {
            get
            {
                return this.langToField;
            }
            set
            {
                this.langToField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime lastAccess
        {
            get
            {
                return this.lastAccessField;
            }
            set
            {
                this.lastAccessField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tmPath
        {
            get
            {
                return this.tmPathField;
            }
            set
            {
                this.tmPathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CATService.TMType tmType
        {
            get
            {
                return this.tmTypeField;
            }
            set
            {
                this.tmTypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TMType", Namespace="http://schemas.datacontract.org/2004/07/cat.service")]
    public enum TMType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        global = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        groupPrimary = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        groupSecondary = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        profilePrimary = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        profileSecondary = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TMMatch", Namespace="http://schemas.datacontract.org/2004/07/cat.service")]
    public partial class TMMatch : object
    {
        
        private string idField;
        
        private string metadataField;
        
        private string originField;
        
        private int qualityField;
        
        private string sourceField;
        
        private string targetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string metadata
        {
            get
            {
                return this.metadataField;
            }
            set
            {
                this.metadataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string origin
        {
            get
            {
                return this.originField;
            }
            set
            {
                this.originField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quality
        {
            get
            {
                return this.qualityField;
            }
            set
            {
                this.qualityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string source
        {
            get
            {
                return this.sourceField;
            }
            set
            {
                this.sourceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string target
        {
            get
            {
                return this.targetField;
            }
            set
            {
                this.targetField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TMEntry", Namespace="http://schemas.datacontract.org/2004/07/cat.service")]
    public partial class TMEntry : object
    {
        
        private int idField;
        
        private string metadataField;
        
        private string sourceField;
        
        private string targetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string metadata
        {
            get
            {
                return this.metadataField;
            }
            set
            {
                this.metadataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string source
        {
            get
            {
                return this.sourceField;
            }
            set
            {
                this.sourceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string target
        {
            get
            {
                return this.targetField;
            }
            set
            {
                this.targetField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TMImportResult", Namespace="http://schemas.datacontract.org/2004/07/cat.service")]
    public partial class TMImportResult : object
    {
        
        private int allItemsField;
        
        private int importedItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int allItems
        {
            get
            {
                return this.allItemsField;
            }
            set
            {
                this.allItemsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int importedItems
        {
            get
            {
                return this.importedItemsField;
            }
            set
            {
                this.importedItemsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TMIndex", Namespace="http://schemas.datacontract.org/2004/07/cat.service")]
    public enum TMIndex : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Source = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Target = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBType", Namespace="http://schemas.datacontract.org/2004/07/cat.service")]
    public enum TBType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Corporate = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Profile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBInfo", Namespace="http://schemas.datacontract.org/2004/07/cat.service")]
    public partial class TBInfo : object
    {
        
        private int idField;
        
        private string[] languagesField;
        
        private string metadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] languages
        {
            get
            {
                return this.languagesField;
            }
            set
            {
                this.languagesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string metadata
        {
            get
            {
                return this.metadataField;
            }
            set
            {
                this.metadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBEntry", Namespace="http://schemas.datacontract.org/2004/07/cat.service")]
    public partial class TBEntry : object
    {
        
        private string commentField;
        
        private int idField;
        
        private string metadataField;
        
        private System.Collections.Generic.Dictionary<string, string> termsField;
        
        private string userField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comment
        {
            get
            {
                return this.commentField;
            }
            set
            {
                this.commentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string metadata
        {
            get
            {
                return this.metadataField;
            }
            set
            {
                this.metadataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> terms
        {
            get
            {
                return this.termsField;
            }
            set
            {
                this.termsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user
        {
            get
            {
                return this.userField;
            }
            set
            {
                this.userField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBImportResult", Namespace="http://schemas.datacontract.org/2004/07/cat.service")]
    public partial class TBImportResult : object
    {
        
        private int allItemsField;
        
        private int newItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int allItems
        {
            get
            {
                return this.allItemsField;
            }
            set
            {
                this.allItemsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int newItems
        {
            get
            {
                return this.newItemsField;
            }
            set
            {
                this.newItemsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CATService.ICATService")]
    public interface ICATService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetStatisticsForDocument", ReplyAction="http://tempuri.org/ICATService/GetStatisticsForDocumentResponse")]
        CATService.Statistics[] GetStatisticsForDocument(string sFileName, byte[] fileContent, string sFilterName, byte[] filterContent, string sourceLangISO639_1, string[] aTargetLangsISO639_1, CATService.TMAssignment[] aTMAssignments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetStatisticsForDocument", ReplyAction="http://tempuri.org/ICATService/GetStatisticsForDocumentResponse")]
        System.Threading.Tasks.Task<CATService.Statistics[]> GetStatisticsForDocumentAsync(string sFileName, byte[] fileContent, string sFilterName, byte[] filterContent, string sourceLangISO639_1, string[] aTargetLangsISO639_1, CATService.TMAssignment[] aTMAssignments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetTMInfo", ReplyAction="http://tempuri.org/ICATService/GetTMInfoResponse")]
        CATService.TMInfo GetTMInfo(string sTMPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetTMInfo", ReplyAction="http://tempuri.org/ICATService/GetTMInfoResponse")]
        System.Threading.Tasks.Task<CATService.TMInfo> GetTMInfoAsync(string sTMPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/CreateXliff", ReplyAction="http://tempuri.org/ICATService/CreateXliffResponse")]
        string CreateXliff(string sFileName, byte[] fileContent, string sFilterName, byte[] filterContent, string sourceLangISO639_1, string targetLangISO639_1, CATService.TMAssignment[] aTMAssignments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/CreateXliff", ReplyAction="http://tempuri.org/ICATService/CreateXliffResponse")]
        System.Threading.Tasks.Task<string> CreateXliffAsync(string sFileName, byte[] fileContent, string sFilterName, byte[] filterContent, string sourceLangISO639_1, string targetLangISO639_1, CATService.TMAssignment[] aTMAssignments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/CreateDocumentFromXliff", ReplyAction="http://tempuri.org/ICATService/CreateDocumentFromXliffResponse")]
        byte[] CreateDocumentFromXliff(string sFileName, byte[] fileContent, string sFilterName, byte[] filterContent, string sourceLangISO639_1, string targetLangISO639_1, string sXliffContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/CreateDocumentFromXliff", ReplyAction="http://tempuri.org/ICATService/CreateDocumentFromXliffResponse")]
        System.Threading.Tasks.Task<byte[]> CreateDocumentFromXliffAsync(string sFileName, byte[] fileContent, string sFilterName, byte[] filterContent, string sourceLangISO639_1, string targetLangISO639_1, string sXliffContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/PreTranslateXliff", ReplyAction="http://tempuri.org/ICATService/PreTranslateXliffResponse")]
        string PreTranslateXliff(string sXliffContent, string langFrom_ISO639_1, string langTo_ISO639_1, CATService.TMAssignment[] aTMAssignments, int matchThreshold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/PreTranslateXliff", ReplyAction="http://tempuri.org/ICATService/PreTranslateXliffResponse")]
        System.Threading.Tasks.Task<string> PreTranslateXliffAsync(string sXliffContent, string langFrom_ISO639_1, string langTo_ISO639_1, CATService.TMAssignment[] aTMAssignments, int matchThreshold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetTMList", ReplyAction="http://tempuri.org/ICATService/GetTMListResponse")]
        CATService.TMInfo[] GetTMList(bool bFullInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetTMList", ReplyAction="http://tempuri.org/ICATService/GetTMListResponse")]
        System.Threading.Tasks.Task<CATService.TMInfo[]> GetTMListAsync(bool bFullInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetTMListFromDatabase", ReplyAction="http://tempuri.org/ICATService/GetTMListFromDatabaseResponse")]
        CATService.TMInfo[] GetTMListFromDatabase(string dbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetTMListFromDatabase", ReplyAction="http://tempuri.org/ICATService/GetTMListFromDatabaseResponse")]
        System.Threading.Tasks.Task<CATService.TMInfo[]> GetTMListFromDatabaseAsync(string dbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetTMMatches", ReplyAction="http://tempuri.org/ICATService/GetTMMatchesResponse")]
        CATService.TMMatch[] GetTMMatches(CATService.TMAssignment[] aTMAssignments, string sSourceText, string sPrevText, string sNextText, byte matchThreshold, int maxHits);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetTMMatches", ReplyAction="http://tempuri.org/ICATService/GetTMMatchesResponse")]
        System.Threading.Tasks.Task<CATService.TMMatch[]> GetTMMatchesAsync(CATService.TMAssignment[] aTMAssignments, string sSourceText, string sPrevText, string sNextText, byte matchThreshold, int maxHits);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/Concordance", ReplyAction="http://tempuri.org/ICATService/ConcordanceResponse")]
        CATService.TMEntry[] Concordance(string[] aTMPaths, string sSourceText, string sTargetText, bool bCaseSensitive, int maxHits);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/Concordance", ReplyAction="http://tempuri.org/ICATService/ConcordanceResponse")]
        System.Threading.Tasks.Task<CATService.TMEntry[]> ConcordanceAsync(string[] aTMPaths, string sSourceText, string sTargetText, bool bCaseSensitive, int maxHits);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/UpdateTMEntry", ReplyAction="http://tempuri.org/ICATService/UpdateTMEntryResponse")]
        void UpdateTMEntry(string sTMPath, int idEntry, System.Collections.Generic.Dictionary<string, string> fieldsToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/UpdateTMEntry", ReplyAction="http://tempuri.org/ICATService/UpdateTMEntryResponse")]
        System.Threading.Tasks.Task UpdateTMEntryAsync(string sTMPath, int idEntry, System.Collections.Generic.Dictionary<string, string> fieldsToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/DeleteTMEntry", ReplyAction="http://tempuri.org/ICATService/DeleteTMEntryResponse")]
        void DeleteTMEntry(string sTMPath, int idEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/DeleteTMEntry", ReplyAction="http://tempuri.org/ICATService/DeleteTMEntryResponse")]
        System.Threading.Tasks.Task DeleteTMEntryAsync(string sTMPath, int idEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/CreateTM", ReplyAction="http://tempuri.org/ICATService/CreateTMResponse")]
        void CreateTM(string sTMPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/CreateTM", ReplyAction="http://tempuri.org/ICATService/CreateTMResponse")]
        System.Threading.Tasks.Task CreateTMAsync(string sTMPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/TMExists", ReplyAction="http://tempuri.org/ICATService/TMExistsResponse")]
        bool TMExists(string sTMPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/TMExists", ReplyAction="http://tempuri.org/ICATService/TMExistsResponse")]
        System.Threading.Tasks.Task<bool> TMExistsAsync(string sTMPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/AddTMEntries", ReplyAction="http://tempuri.org/ICATService/AddTMEntriesResponse")]
        int AddTMEntries(string sTMPath, CATService.TMEntry[] tmEntries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/AddTMEntries", ReplyAction="http://tempuri.org/ICATService/AddTMEntriesResponse")]
        System.Threading.Tasks.Task<int> AddTMEntriesAsync(string sTMPath, CATService.TMEntry[] tmEntries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/ImportTmx", ReplyAction="http://tempuri.org/ICATService/ImportTmxResponse")]
        CATService.TMImportResult ImportTmx(string sTMPath, string sSourceLangIso639_1, string sTargetLangIso639_1, string sTMXContent, string sUser, int speciality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/ImportTmx", ReplyAction="http://tempuri.org/ICATService/ImportTmxResponse")]
        System.Threading.Tasks.Task<CATService.TMImportResult> ImportTmxAsync(string sTMPath, string sSourceLangIso639_1, string sTargetLangIso639_1, string sTMXContent, string sUser, int speciality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/ExportTmx", ReplyAction="http://tempuri.org/ICATService/ExportTmxResponse")]
        string ExportTmx(string sTMPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/ExportTmx", ReplyAction="http://tempuri.org/ICATService/ExportTmxResponse")]
        System.Threading.Tasks.Task<string> ExportTmxAsync(string sTMPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/ReindexTM", ReplyAction="http://tempuri.org/ICATService/ReindexTMResponse")]
        int ReindexTM(string sTMPath, CATService.TMIndex index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/ReindexTM", ReplyAction="http://tempuri.org/ICATService/ReindexTMResponse")]
        System.Threading.Tasks.Task<int> ReindexTMAsync(string sTMPath, CATService.TMIndex index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/ShrinkTM", ReplyAction="http://tempuri.org/ICATService/ShrinkTMResponse")]
        void ShrinkTM(string sTMPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/ShrinkTM", ReplyAction="http://tempuri.org/ICATService/ShrinkTMResponse")]
        System.Threading.Tasks.Task ShrinkTMAsync(string sTMPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetTBInfo", ReplyAction="http://tempuri.org/ICATService/GetTBInfoResponse")]
        CATService.TBInfo GetTBInfo(CATService.TBType tbType, int idType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetTBInfo", ReplyAction="http://tempuri.org/ICATService/GetTBInfoResponse")]
        System.Threading.Tasks.Task<CATService.TBInfo> GetTBInfoAsync(CATService.TBType tbType, int idType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetTBInfoById", ReplyAction="http://tempuri.org/ICATService/GetTBInfoByIdResponse")]
        CATService.TBInfo GetTBInfoById(int idTermbase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetTBInfoById", ReplyAction="http://tempuri.org/ICATService/GetTBInfoByIdResponse")]
        System.Threading.Tasks.Task<CATService.TBInfo> GetTBInfoByIdAsync(int idTermbase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/CreateTB", ReplyAction="http://tempuri.org/ICATService/CreateTBResponse")]
        CATService.TBInfo CreateTB(CATService.TBType tbType, int idType, string[] langCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/CreateTB", ReplyAction="http://tempuri.org/ICATService/CreateTBResponse")]
        System.Threading.Tasks.Task<CATService.TBInfo> CreateTBAsync(CATService.TBType tbType, int idType, string[] langCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/AddLanguageToTB", ReplyAction="http://tempuri.org/ICATService/AddLanguageToTBResponse")]
        void AddLanguageToTB(int idTermbase, string langCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/AddLanguageToTB", ReplyAction="http://tempuri.org/ICATService/AddLanguageToTBResponse")]
        System.Threading.Tasks.Task AddLanguageToTBAsync(int idTermbase, string langCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/RemoveLanguageFromTB", ReplyAction="http://tempuri.org/ICATService/RemoveLanguageFromTBResponse")]
        void RemoveLanguageFromTB(int idTermbase, string langCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/RemoveLanguageFromTB", ReplyAction="http://tempuri.org/ICATService/RemoveLanguageFromTBResponse")]
        System.Threading.Tasks.Task RemoveLanguageFromTBAsync(int idTermbase, string langCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/AddOrUpdateTBEntry", ReplyAction="http://tempuri.org/ICATService/AddOrUpdateTBEntryResponse")]
        int AddOrUpdateTBEntry(int idTermbase, CATService.TBEntry tbEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/AddOrUpdateTBEntry", ReplyAction="http://tempuri.org/ICATService/AddOrUpdateTBEntryResponse")]
        System.Threading.Tasks.Task<int> AddOrUpdateTBEntryAsync(int idTermbase, CATService.TBEntry tbEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/DeleteTBEntry", ReplyAction="http://tempuri.org/ICATService/DeleteTBEntryResponse")]
        void DeleteTBEntry(int idTermbase, int idEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/DeleteTBEntry", ReplyAction="http://tempuri.org/ICATService/DeleteTBEntryResponse")]
        System.Threading.Tasks.Task DeleteTBEntryAsync(int idTermbase, int idEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/ImportTBEntries", ReplyAction="http://tempuri.org/ICATService/ImportTBEntriesResponse")]
        CATService.TBImportResult ImportTBEntries(int idTermbase, CATService.TBEntry[] tbEntries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/ImportTBEntries", ReplyAction="http://tempuri.org/ICATService/ImportTBEntriesResponse")]
        System.Threading.Tasks.Task<CATService.TBImportResult> ImportTBEntriesAsync(int idTermbase, CATService.TBEntry[] tbEntries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/ListTBEntries", ReplyAction="http://tempuri.org/ICATService/ListTBEntriesResponse")]
        CATService.TBEntry[] ListTBEntries(int idTermbase, string[] languages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/ListTBEntries", ReplyAction="http://tempuri.org/ICATService/ListTBEntriesResponse")]
        System.Threading.Tasks.Task<CATService.TBEntry[]> ListTBEntriesAsync(int idTermbase, string[] languages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetSystemInfo", ReplyAction="http://tempuri.org/ICATService/GetSystemInfoResponse")]
        string GetSystemInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/GetSystemInfo", ReplyAction="http://tempuri.org/ICATService/GetSystemInfoResponse")]
        System.Threading.Tasks.Task<string> GetSystemInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/SplitIntoWords", ReplyAction="http://tempuri.org/ICATService/SplitIntoWordsResponse")]
        string[] SplitIntoWords(string text, string langId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/SplitIntoWords", ReplyAction="http://tempuri.org/ICATService/SplitIntoWordsResponse")]
        System.Threading.Tasks.Task<string[]> SplitIntoWordsAsync(string text, string langId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/SQLFullBackup", ReplyAction="http://tempuri.org/ICATService/SQLFullBackupResponse")]
        void SQLFullBackup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/SQLFullBackup", ReplyAction="http://tempuri.org/ICATService/SQLFullBackupResponse")]
        System.Threading.Tasks.Task SQLFullBackupAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/SQLBackup", ReplyAction="http://tempuri.org/ICATService/SQLBackupResponse")]
        void SQLBackup(string dbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/SQLBackup", ReplyAction="http://tempuri.org/ICATService/SQLBackupResponse")]
        System.Threading.Tasks.Task SQLBackupAsync(string dbName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/FailoverSync", ReplyAction="http://tempuri.org/ICATService/FailoverSyncResponse")]
        void FailoverSync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICATService/FailoverSync", ReplyAction="http://tempuri.org/ICATService/FailoverSyncResponse")]
        System.Threading.Tasks.Task FailoverSyncAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface ICATServiceChannel : CATService.ICATService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class CATServiceClient : System.ServiceModel.ClientBase<CATService.ICATService>, CATService.ICATService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CATServiceClient() : 
                base(CATServiceClient.GetDefaultBinding(), CATServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.NetTcpBinding_ICATService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CATServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(CATServiceClient.GetBindingForEndpoint(endpointConfiguration), CATServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CATServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CATServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CATServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CATServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CATServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public CATService.Statistics[] GetStatisticsForDocument(string sFileName, byte[] fileContent, string sFilterName, byte[] filterContent, string sourceLangISO639_1, string[] aTargetLangsISO639_1, CATService.TMAssignment[] aTMAssignments)
        {
            return base.Channel.GetStatisticsForDocument(sFileName, fileContent, sFilterName, filterContent, sourceLangISO639_1, aTargetLangsISO639_1, aTMAssignments);
        }
        
        public System.Threading.Tasks.Task<CATService.Statistics[]> GetStatisticsForDocumentAsync(string sFileName, byte[] fileContent, string sFilterName, byte[] filterContent, string sourceLangISO639_1, string[] aTargetLangsISO639_1, CATService.TMAssignment[] aTMAssignments)
        {
            return base.Channel.GetStatisticsForDocumentAsync(sFileName, fileContent, sFilterName, filterContent, sourceLangISO639_1, aTargetLangsISO639_1, aTMAssignments);
        }
        
        public CATService.TMInfo GetTMInfo(string sTMPath)
        {
            return base.Channel.GetTMInfo(sTMPath);
        }
        
        public System.Threading.Tasks.Task<CATService.TMInfo> GetTMInfoAsync(string sTMPath)
        {
            return base.Channel.GetTMInfoAsync(sTMPath);
        }
        
        public string CreateXliff(string sFileName, byte[] fileContent, string sFilterName, byte[] filterContent, string sourceLangISO639_1, string targetLangISO639_1, CATService.TMAssignment[] aTMAssignments)
        {
            return base.Channel.CreateXliff(sFileName, fileContent, sFilterName, filterContent, sourceLangISO639_1, targetLangISO639_1, aTMAssignments);
        }
        
        public System.Threading.Tasks.Task<string> CreateXliffAsync(string sFileName, byte[] fileContent, string sFilterName, byte[] filterContent, string sourceLangISO639_1, string targetLangISO639_1, CATService.TMAssignment[] aTMAssignments)
        {
            return base.Channel.CreateXliffAsync(sFileName, fileContent, sFilterName, filterContent, sourceLangISO639_1, targetLangISO639_1, aTMAssignments);
        }
        
        public byte[] CreateDocumentFromXliff(string sFileName, byte[] fileContent, string sFilterName, byte[] filterContent, string sourceLangISO639_1, string targetLangISO639_1, string sXliffContent)
        {
            return base.Channel.CreateDocumentFromXliff(sFileName, fileContent, sFilterName, filterContent, sourceLangISO639_1, targetLangISO639_1, sXliffContent);
        }
        
        public System.Threading.Tasks.Task<byte[]> CreateDocumentFromXliffAsync(string sFileName, byte[] fileContent, string sFilterName, byte[] filterContent, string sourceLangISO639_1, string targetLangISO639_1, string sXliffContent)
        {
            return base.Channel.CreateDocumentFromXliffAsync(sFileName, fileContent, sFilterName, filterContent, sourceLangISO639_1, targetLangISO639_1, sXliffContent);
        }
        
        public string PreTranslateXliff(string sXliffContent, string langFrom_ISO639_1, string langTo_ISO639_1, CATService.TMAssignment[] aTMAssignments, int matchThreshold)
        {
            return base.Channel.PreTranslateXliff(sXliffContent, langFrom_ISO639_1, langTo_ISO639_1, aTMAssignments, matchThreshold);
        }
        
        public System.Threading.Tasks.Task<string> PreTranslateXliffAsync(string sXliffContent, string langFrom_ISO639_1, string langTo_ISO639_1, CATService.TMAssignment[] aTMAssignments, int matchThreshold)
        {
            return base.Channel.PreTranslateXliffAsync(sXliffContent, langFrom_ISO639_1, langTo_ISO639_1, aTMAssignments, matchThreshold);
        }
        
        public CATService.TMInfo[] GetTMList(bool bFullInfo)
        {
            return base.Channel.GetTMList(bFullInfo);
        }
        
        public System.Threading.Tasks.Task<CATService.TMInfo[]> GetTMListAsync(bool bFullInfo)
        {
            return base.Channel.GetTMListAsync(bFullInfo);
        }
        
        public CATService.TMInfo[] GetTMListFromDatabase(string dbName)
        {
            return base.Channel.GetTMListFromDatabase(dbName);
        }
        
        public System.Threading.Tasks.Task<CATService.TMInfo[]> GetTMListFromDatabaseAsync(string dbName)
        {
            return base.Channel.GetTMListFromDatabaseAsync(dbName);
        }
        
        public CATService.TMMatch[] GetTMMatches(CATService.TMAssignment[] aTMAssignments, string sSourceText, string sPrevText, string sNextText, byte matchThreshold, int maxHits)
        {
            return base.Channel.GetTMMatches(aTMAssignments, sSourceText, sPrevText, sNextText, matchThreshold, maxHits);
        }
        
        public System.Threading.Tasks.Task<CATService.TMMatch[]> GetTMMatchesAsync(CATService.TMAssignment[] aTMAssignments, string sSourceText, string sPrevText, string sNextText, byte matchThreshold, int maxHits)
        {
            return base.Channel.GetTMMatchesAsync(aTMAssignments, sSourceText, sPrevText, sNextText, matchThreshold, maxHits);
        }
        
        public CATService.TMEntry[] Concordance(string[] aTMPaths, string sSourceText, string sTargetText, bool bCaseSensitive, int maxHits)
        {
            return base.Channel.Concordance(aTMPaths, sSourceText, sTargetText, bCaseSensitive, maxHits);
        }
        
        public System.Threading.Tasks.Task<CATService.TMEntry[]> ConcordanceAsync(string[] aTMPaths, string sSourceText, string sTargetText, bool bCaseSensitive, int maxHits)
        {
            return base.Channel.ConcordanceAsync(aTMPaths, sSourceText, sTargetText, bCaseSensitive, maxHits);
        }
        
        public void UpdateTMEntry(string sTMPath, int idEntry, System.Collections.Generic.Dictionary<string, string> fieldsToUpdate)
        {
            base.Channel.UpdateTMEntry(sTMPath, idEntry, fieldsToUpdate);
        }
        
        public System.Threading.Tasks.Task UpdateTMEntryAsync(string sTMPath, int idEntry, System.Collections.Generic.Dictionary<string, string> fieldsToUpdate)
        {
            return base.Channel.UpdateTMEntryAsync(sTMPath, idEntry, fieldsToUpdate);
        }
        
        public void DeleteTMEntry(string sTMPath, int idEntry)
        {
            base.Channel.DeleteTMEntry(sTMPath, idEntry);
        }
        
        public System.Threading.Tasks.Task DeleteTMEntryAsync(string sTMPath, int idEntry)
        {
            return base.Channel.DeleteTMEntryAsync(sTMPath, idEntry);
        }
        
        public void CreateTM(string sTMPath)
        {
            base.Channel.CreateTM(sTMPath);
        }
        
        public System.Threading.Tasks.Task CreateTMAsync(string sTMPath)
        {
            return base.Channel.CreateTMAsync(sTMPath);
        }
        
        public bool TMExists(string sTMPath)
        {
            return base.Channel.TMExists(sTMPath);
        }
        
        public System.Threading.Tasks.Task<bool> TMExistsAsync(string sTMPath)
        {
            return base.Channel.TMExistsAsync(sTMPath);
        }
        
        public int AddTMEntries(string sTMPath, CATService.TMEntry[] tmEntries)
        {
            return base.Channel.AddTMEntries(sTMPath, tmEntries);
        }
        
        public System.Threading.Tasks.Task<int> AddTMEntriesAsync(string sTMPath, CATService.TMEntry[] tmEntries)
        {
            return base.Channel.AddTMEntriesAsync(sTMPath, tmEntries);
        }
        
        public CATService.TMImportResult ImportTmx(string sTMPath, string sSourceLangIso639_1, string sTargetLangIso639_1, string sTMXContent, string sUser, int speciality)
        {
            return base.Channel.ImportTmx(sTMPath, sSourceLangIso639_1, sTargetLangIso639_1, sTMXContent, sUser, speciality);
        }
        
        public System.Threading.Tasks.Task<CATService.TMImportResult> ImportTmxAsync(string sTMPath, string sSourceLangIso639_1, string sTargetLangIso639_1, string sTMXContent, string sUser, int speciality)
        {
            return base.Channel.ImportTmxAsync(sTMPath, sSourceLangIso639_1, sTargetLangIso639_1, sTMXContent, sUser, speciality);
        }
        
        public string ExportTmx(string sTMPath)
        {
            return base.Channel.ExportTmx(sTMPath);
        }
        
        public System.Threading.Tasks.Task<string> ExportTmxAsync(string sTMPath)
        {
            return base.Channel.ExportTmxAsync(sTMPath);
        }
        
        public int ReindexTM(string sTMPath, CATService.TMIndex index)
        {
            return base.Channel.ReindexTM(sTMPath, index);
        }
        
        public System.Threading.Tasks.Task<int> ReindexTMAsync(string sTMPath, CATService.TMIndex index)
        {
            return base.Channel.ReindexTMAsync(sTMPath, index);
        }
        
        public void ShrinkTM(string sTMPath)
        {
            base.Channel.ShrinkTM(sTMPath);
        }
        
        public System.Threading.Tasks.Task ShrinkTMAsync(string sTMPath)
        {
            return base.Channel.ShrinkTMAsync(sTMPath);
        }
        
        public CATService.TBInfo GetTBInfo(CATService.TBType tbType, int idType)
        {
            return base.Channel.GetTBInfo(tbType, idType);
        }
        
        public System.Threading.Tasks.Task<CATService.TBInfo> GetTBInfoAsync(CATService.TBType tbType, int idType)
        {
            return base.Channel.GetTBInfoAsync(tbType, idType);
        }
        
        public CATService.TBInfo GetTBInfoById(int idTermbase)
        {
            return base.Channel.GetTBInfoById(idTermbase);
        }
        
        public System.Threading.Tasks.Task<CATService.TBInfo> GetTBInfoByIdAsync(int idTermbase)
        {
            return base.Channel.GetTBInfoByIdAsync(idTermbase);
        }
        
        public CATService.TBInfo CreateTB(CATService.TBType tbType, int idType, string[] langCodes)
        {
            return base.Channel.CreateTB(tbType, idType, langCodes);
        }
        
        public System.Threading.Tasks.Task<CATService.TBInfo> CreateTBAsync(CATService.TBType tbType, int idType, string[] langCodes)
        {
            return base.Channel.CreateTBAsync(tbType, idType, langCodes);
        }
        
        public void AddLanguageToTB(int idTermbase, string langCode)
        {
            base.Channel.AddLanguageToTB(idTermbase, langCode);
        }
        
        public System.Threading.Tasks.Task AddLanguageToTBAsync(int idTermbase, string langCode)
        {
            return base.Channel.AddLanguageToTBAsync(idTermbase, langCode);
        }
        
        public void RemoveLanguageFromTB(int idTermbase, string langCode)
        {
            base.Channel.RemoveLanguageFromTB(idTermbase, langCode);
        }
        
        public System.Threading.Tasks.Task RemoveLanguageFromTBAsync(int idTermbase, string langCode)
        {
            return base.Channel.RemoveLanguageFromTBAsync(idTermbase, langCode);
        }
        
        public int AddOrUpdateTBEntry(int idTermbase, CATService.TBEntry tbEntry)
        {
            return base.Channel.AddOrUpdateTBEntry(idTermbase, tbEntry);
        }
        
        public System.Threading.Tasks.Task<int> AddOrUpdateTBEntryAsync(int idTermbase, CATService.TBEntry tbEntry)
        {
            return base.Channel.AddOrUpdateTBEntryAsync(idTermbase, tbEntry);
        }
        
        public void DeleteTBEntry(int idTermbase, int idEntry)
        {
            base.Channel.DeleteTBEntry(idTermbase, idEntry);
        }
        
        public System.Threading.Tasks.Task DeleteTBEntryAsync(int idTermbase, int idEntry)
        {
            return base.Channel.DeleteTBEntryAsync(idTermbase, idEntry);
        }
        
        public CATService.TBImportResult ImportTBEntries(int idTermbase, CATService.TBEntry[] tbEntries)
        {
            return base.Channel.ImportTBEntries(idTermbase, tbEntries);
        }
        
        public System.Threading.Tasks.Task<CATService.TBImportResult> ImportTBEntriesAsync(int idTermbase, CATService.TBEntry[] tbEntries)
        {
            return base.Channel.ImportTBEntriesAsync(idTermbase, tbEntries);
        }
        
        public CATService.TBEntry[] ListTBEntries(int idTermbase, string[] languages)
        {
            return base.Channel.ListTBEntries(idTermbase, languages);
        }
        
        public System.Threading.Tasks.Task<CATService.TBEntry[]> ListTBEntriesAsync(int idTermbase, string[] languages)
        {
            return base.Channel.ListTBEntriesAsync(idTermbase, languages);
        }
        
        public string GetSystemInfo()
        {
            return base.Channel.GetSystemInfo();
        }
        
        public System.Threading.Tasks.Task<string> GetSystemInfoAsync()
        {
            return base.Channel.GetSystemInfoAsync();
        }
        
        public string[] SplitIntoWords(string text, string langId)
        {
            return base.Channel.SplitIntoWords(text, langId);
        }
        
        public System.Threading.Tasks.Task<string[]> SplitIntoWordsAsync(string text, string langId)
        {
            return base.Channel.SplitIntoWordsAsync(text, langId);
        }
        
        public void SQLFullBackup()
        {
            base.Channel.SQLFullBackup();
        }
        
        public System.Threading.Tasks.Task SQLFullBackupAsync()
        {
            return base.Channel.SQLFullBackupAsync();
        }
        
        public void SQLBackup(string dbName)
        {
            base.Channel.SQLBackup(dbName);
        }
        
        public System.Threading.Tasks.Task SQLBackupAsync(string dbName)
        {
            return base.Channel.SQLBackupAsync(dbName);
        }
        
        public void FailoverSync()
        {
            base.Channel.FailoverSync();
        }
        
        public System.Threading.Tasks.Task FailoverSyncAsync()
        {
            return base.Channel.FailoverSyncAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_ICATService))
            {
                System.ServiceModel.NetTcpBinding result = new System.ServiceModel.NetTcpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.Security.Mode = System.ServiceModel.SecurityMode.None;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_ICATService))
            {
                return new System.ServiceModel.EndpointAddress("net.tcp://localhost:8086/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CATServiceClient.GetBindingForEndpoint(EndpointConfiguration.NetTcpBinding_ICATService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CATServiceClient.GetEndpointAddress(EndpointConfiguration.NetTcpBinding_ICATService);
        }
        
        public enum EndpointConfiguration
        {
            
            NetTcpBinding_ICATService,
        }
    }
}
